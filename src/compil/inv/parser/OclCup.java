
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Mon Mar 28 03:45:38 BRT 2011
//----------------------------------------------------

package compil.inv.parser;

import java_cup.runtime.*;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Mon Mar 28 03:45:38 BRT 2011
  */
public class OclCup extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public OclCup() {super();}

  /** Constructor which sets the default scanner. */
  public OclCup(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public OclCup(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\010\000\002\002\006\000\002\002\004\000\002\003" +
    "\007\000\002\004\004\000\002\005\005\000\002\005\003" +
    "\000\002\006\003\000\002\006\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\007\000\004\036\005\001\002\000\004\002\011\001" +
    "\002\000\004\037\006\001\002\000\004\005\007\001\002" +
    "\000\004\063\010\001\002\000\004\002\001\001\002\000" +
    "\004\002\000\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\007\000\004\002\003\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$OclCup$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$OclCup$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$OclCup$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 1;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    
    public void report_error(String message, Object info) {
   
        StringBuffer m = new StringBuffer("Error");
   
        if (info instanceof java_cup.runtime.Symbol) {
            java_cup.runtime.Symbol s = ((java_cup.runtime.Symbol) info);
            if (s.left >= 0) {
                /* Add to the end of the StringBuffer error message
                   the line number of the error in the input. */
                m.append(" in line "+(s.left+1));   
                /* Check if the column number in the input is greater
                   or equal to zero. */
                if (s.right >= 0)                    
                    /* Add to the end of the StringBuffer error message
                       the column number of the error in the input. */
                    m.append(", column "+(s.right+1));
            }
        }
   
        m.append(" : "+message);
        System.err.println(m);
    }

    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$OclCup$actions {
  private final OclCup parser;

  /** Constructor */
  CUP$OclCup$actions(OclCup parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$OclCup$do_action(
    int                        CUP$OclCup$act_num,
    java_cup.runtime.lr_parser CUP$OclCup$parser,
    java.util.Stack            CUP$OclCup$stack,
    int                        CUP$OclCup$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$OclCup$result;

      /* select the action based on the action number */
      switch (CUP$OclCup$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Id_01 ::= 
            {
              Object RESULT =null;

              CUP$OclCup$result = parser.getSymbolFactory().newSymbol("Id_01",4, ((java_cup.runtime.Symbol)CUP$OclCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$OclCup$stack.peek()), RESULT);
            }
          return CUP$OclCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Id_01 ::= ID 
            {
              Object RESULT =null;

              CUP$OclCup$result = parser.getSymbolFactory().newSymbol("Id_01",4, ((java_cup.runtime.Symbol)CUP$OclCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$OclCup$stack.peek()), RESULT);
            }
          return CUP$OclCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // ClassifierContexto ::= ID 
            {
              Object RESULT =null;

              CUP$OclCup$result = parser.getSymbolFactory().newSymbol("ClassifierContexto",3, ((java_cup.runtime.Symbol)CUP$OclCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$OclCup$stack.peek()), RESULT);
            }
          return CUP$OclCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // ClassifierContexto ::= ID COLON ID 
            {
              Object RESULT =null;

              CUP$OclCup$result = parser.getSymbolFactory().newSymbol("ClassifierContexto",3, ((java_cup.runtime.Symbol)CUP$OclCup$stack.elementAt(CUP$OclCup$top-2)), ((java_cup.runtime.Symbol)CUP$OclCup$stack.peek()), RESULT);
            }
          return CUP$OclCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // DeclaracaoContexto ::= CONTEXT ClassifierContexto 
            {
              Object RESULT =null;

              CUP$OclCup$result = parser.getSymbolFactory().newSymbol("DeclaracaoContexto",2, ((java_cup.runtime.Symbol)CUP$OclCup$stack.elementAt(CUP$OclCup$top-1)), ((java_cup.runtime.Symbol)CUP$OclCup$stack.peek()), RESULT);
            }
          return CUP$OclCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Restricao ::= DeclaracaoContexto INV Id_01 COLON Id_01 
            {
              Object RESULT =null;

              CUP$OclCup$result = parser.getSymbolFactory().newSymbol("Restricao",1, ((java_cup.runtime.Symbol)CUP$OclCup$stack.elementAt(CUP$OclCup$top-4)), ((java_cup.runtime.Symbol)CUP$OclCup$stack.peek()), RESULT);
            }
          return CUP$OclCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // $START ::= ExpressoesOcl EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$OclCup$stack.elementAt(CUP$OclCup$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$OclCup$stack.elementAt(CUP$OclCup$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$OclCup$stack.elementAt(CUP$OclCup$top-1)).value;
		RESULT = start_val;
              CUP$OclCup$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$OclCup$stack.elementAt(CUP$OclCup$top-1)), ((java_cup.runtime.Symbol)CUP$OclCup$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$OclCup$parser.done_parsing();
          return CUP$OclCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // ExpressoesOcl ::= CONTEXT INV COLON ID 
            {
              Object RESULT =null;

              CUP$OclCup$result = parser.getSymbolFactory().newSymbol("ExpressoesOcl",0, ((java_cup.runtime.Symbol)CUP$OclCup$stack.elementAt(CUP$OclCup$top-3)), ((java_cup.runtime.Symbol)CUP$OclCup$stack.peek()), RESULT);
            }
          return CUP$OclCup$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

